Lab 4: SQL injection UNION attack, finding a column containing text

Details:This lab ontains an SQL injection vulnerability in the product category filter. The results from the query are returned in the application's response, so you can use a UNION attack to retrieve data from other tables. To construct such an attack, you first need to determine the number of columns returned by the query. You can do this using a technique you learned in a previous lab. The next step is to identify a column that is compatible with string data.

To Do: The lab will provide a random value that you need to make appear within the query results. To solve the lab, perform an SQL injection UNION attack that returns an additional row containing the value provided. This technique helps you determine which columns are compatible with string data.

Solution:
	1. Use Burp Suite to intercept the request.
        2. Send the request to the repeter (ctrl+r) [it's easy to modify the request and view the result in the repeter]. You can do that in default "intercept" tab under "Proxy". It's totally optional. 
        3. Modify the 'category' parameter to " ' UNION SELECT NULL--".
        4. Add "NULL" to the query untill an valid 200 status request. 
                i.e. " ' UNION SELECT NULL, NULL--"
                        " ' UNION SELECT NULL, NULL, NULL--"
        5. When you will get a 200 status the number of "NULL" is the number of columns returned by the orginal query.
	6. Now put a specific STRING in the place of single a "NULL" and alternate the position untill got an valid 200 status request. 
